package view;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.Calc;
import model.FileOrganizer;
import model.Map;
import model.MapEvent;
import model.MapListener;
import model.Neuron;

/**
 *
 * @author Weverson S. Gomes
 */
public class Kohonen extends javax.swing.JFrame implements MapListener {
    private Map map;
    private Neuron[][] mapEstructure;
    private Neuron[] winner;
    private double[][] weightWinner;
    private double mTest[][] = null;
    private LinkedList<Neuron> g = new LinkedList<Neuron>();
    private LinkedList<Integer> g0 = new LinkedList<Integer>();
    private LinkedList<Integer> g1 = new LinkedList<Integer>();
    private LinkedList<Integer> g2 = new LinkedList<Integer>();
    
    private LinkedList<Integer> malignant = new LinkedList<Integer>();
    private LinkedList<Integer> benign = new LinkedList<Integer>();
    
    private int[] count1, count2, count3;
    /**
     * Creates new form NewJFrame
     */
    public Kohonen() {
        initComponents();
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelMap = new javax.swing.JLabel();
        jLabelSize = new javax.swing.JLabel();
        jLabelNameMap = new javax.swing.JLabel();
        jLabelSize2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jTextFieldNumberOfGroups = new javax.swing.JTextField();
        jLabelNumberOfGroups = new javax.swing.JLabel();
        jButtonKMeans = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldTest = new javax.swing.JTextField();
        jButtonBrowseTest = new javax.swing.JButton();
        jButtonTest = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButtonBrowseTrain = new javax.swing.JButton();
        jTextFieldTrain = new javax.swing.JTextField();
        jButtonTrain = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableResult = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuNewMap = new javax.swing.JMenu();
        jMenuItemNewMap = new javax.swing.JMenuItem();
        jMenuItemOpenMap = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuView = new javax.swing.JMenu();
        jMenuTools = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelMap.setText("Map:");

        jLabelSize.setText("Size:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelMap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelNameMap, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelSize)
                        .addGap(9, 9, 9)
                        .addComponent(jLabelSize2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelNameMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSize2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(91, 91, 91))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelNumberOfGroups.setText("Number of groups");

        jButtonKMeans.setText("Apply K-Means");
        jButtonKMeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKMeansActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelNumberOfGroups)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldNumberOfGroups, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonKMeans, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumberOfGroups)
                    .addComponent(jTextFieldNumberOfGroups, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonKMeans)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextFieldTest.setText("Sample");
        jTextFieldTest.setEditable(false);

        jButtonBrowseTest.setText("Browse");
        jButtonBrowseTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseTestActionPerformed(evt);
            }
        });

        jButtonTest.setText("Test");
        jButtonTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldTest, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBrowseTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBrowseTest))
                .addGap(18, 18, 18)
                .addComponent(jButtonTest)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonBrowseTrain.setText("Browse");
        jButtonBrowseTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBrowseTrainActionPerformed(evt);
            }
        });

        jTextFieldTrain.setText("Sample");
        jTextFieldTrain.setEditable(false);

        jButtonTrain.setText("Train");
        jButtonTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTrainActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldTrain, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonTrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonBrowseTrain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBrowseTrain)
                    .addComponent(jTextFieldTrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jButtonTrain)
                .addContainerGap())
        );

        jTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "NO RESULT"
            }
        ));
        jScrollPane1.setViewportView(jTableResult);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
        );

        jMenuNewMap.setText("File");

        jMenuItemNewMap.setText("New Map");
        jMenuItemNewMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewMapActionPerformed(evt);
            }
        });
        jMenuNewMap.add(jMenuItemNewMap);

        jMenuItemOpenMap.setText("Open Existing Map");
        jMenuNewMap.add(jMenuItemOpenMap);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveActionPerformed(evt);
            }
        });
        jMenuNewMap.add(jMenuItemSave);

        jMenuBar1.add(jMenuNewMap);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenuView.setText("View");
        jMenuBar1.add(jMenuView);

        jMenuTools.setText("Tools");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Advanced train and test");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuTools.add(jMenuItem1);

        jMenuBar1.add(jMenuTools);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNewMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewMapActionPerformed
        NewMap newProject = new NewMap(this);
        newProject.setVisible(true);
    }//GEN-LAST:event_jMenuItemNewMapActionPerformed

    private void jMenuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveActionPerformed
        if (map == null) {
            JOptionPane.showMessageDialog(null, "Nenhum mapa criado!", "Atenção", 2);
            return;
        }
        StringBuilder weight = new StringBuilder();
        mapEstructure = map.getMap();
        try {
            BufferedWriter out = new BufferedWriter(new FileWriter("dadosTestes/"+jLabelNameMap.getText()+".txt"));
            int numOfNeurons = mapEstructure.length * mapEstructure[0].length;
            for (int i = 0; i < mapEstructure.length; i++) {
                for (int j = 0; j < mapEstructure[0].length; j++) {
                    double[] aux = mapEstructure[i][j].getWeight();
                    for (int k = 0; k < aux.length; k++) {
                        weight.append(aux[k]).append(" ");
                    }
                    out.write(weight.toString());
                    if (numOfNeurons > 1) {
                        out.write("\n");
                    }
                    numOfNeurons--;
                    weight = new StringBuilder();
                }
            }
            out.close();
        } catch (IOException e) {
            System.out.println("ERRO: " + e);
        }
    }//GEN-LAST:event_jMenuItemSaveActionPerformed

    private void jButtonBrowseTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseTestActionPerformed
        if (map == null) {
            JOptionPane.showMessageDialog(null, "Nenhum mapa criado!", "Atenção", 2);
            return;
        }
        
        JFileChooser chooser = new JFileChooser();
        String path;
        int retorno = chooser.showSaveDialog(null);
        if (retorno == JFileChooser.APPROVE_OPTION) {
            path = chooser.getSelectedFile().getAbsolutePath();
            jTextFieldTest.setText(path);
        }
    }//GEN-LAST:event_jButtonBrowseTestActionPerformed

    private void jButtonBrowseTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBrowseTrainActionPerformed
        if (map == null) {
            JOptionPane.showMessageDialog(null, "Nenhum mapa criado!", "Atenção", 2);
            return;
        }
        
        JFileChooser chooser = new JFileChooser();
        String path;
        int retorno = chooser.showSaveDialog(null);
        if (retorno == JFileChooser.APPROVE_OPTION){
            path = chooser.getSelectedFile().getAbsolutePath();
            jTextFieldTrain.setText(path);
        }
    }//GEN-LAST:event_jButtonBrowseTrainActionPerformed

    private void jButtonTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTestActionPerformed
        if (map == null) {
            JOptionPane.showMessageDialog(null, "Nenhum mapa criado!", "Atenção", 2);
            return;
        }
        String path;
        malignant = new LinkedList<Integer>();
        benign = new LinkedList<Integer>();
        if (jTextFieldTest.getText() != null) {
            path = jTextFieldTest.getText();
            
            try {
                mTest = FileOrganizer.fileToMatrix(path, ",");
            } catch(IOException e) {
            }

            int[] aux1 = new int[winner.length * winner.length];
            int[] aux2 = new int[winner.length * winner.length];
            String[][] matrix = new String[mTest.length][2];
            for (int i = 0; i < mTest.length; i++) {
                System.out.println("Amostra [" + i + "]: " + map.defineWinner(mTest[i]).getName());
                if (i < 64) {
                    aux1[map.defineWinner(mTest[i]).getName()]++;
                } else {
                    aux2[map.defineWinner(mTest[i]).getName()]++;
                }
            }
            for (int i = 0; i < aux1.length; i++) {
                if (aux1[i] > aux2[i]) {
                    malignant.add(i);
                } else {
                    benign.add(i);
                }
            }
            int falsosNegativos = 0;
            int falsosPositivos = 0;
            for (int i = 0; i < mTest.length; i++) {
                if (malignant.contains(map.defineWinner(mTest[i]).getName())) {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "MALIGNA";
                } else if (benign.contains(map.defineWinner(mTest[i]).getName())) {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "BENIGNA";
                } else {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "ERRO";
                }
                if (i < 64 && matrix[i][1].equals("BENIGNA")) {
                    falsosNegativos++;
                } else if (i >= 64 && matrix[i][1].equals("MALIGNA")) {
                    falsosPositivos++;
                }
                System.out.println("Amostra [" + i + "]: " + matrix[i][1]);
            }
            float fpRate, tpRate;
            tpRate = (64f - falsosNegativos) / 64f;
            fpRate = (falsosPositivos) / 107f;
            System.out.println("tpRate: " + tpRate);
            System.out.println("fpRate: " + fpRate);
            setTable(matrix, new String[]{"AMOSTRA", "TIPO"});
        }
    }//GEN-LAST:event_jButtonTestActionPerformed

    private void jButtonKMeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKMeansActionPerformed
        if (jTextFieldNumberOfGroups.getText() != null) {
            double[][] mKMeans = new double[g.size()][g.getFirst().getWeight().length];
            for (int i = 0; i < g.size(); i++) {
                mKMeans[i] = g.get(i).getWeight();
            }
            System.out.println("NÚMERO VENCEDORES: " + mKMeans.length);
            int[][] result = Calc.KMeans(Integer.parseInt(jTextFieldNumberOfGroups.getText()), mKMeans, mKMeans[0].length);
            for (int i = 0; i < result.length; i++) {
                for (int j = 0; j < result[0].length; j++) {
                    if (result[i][j] == 1) {
                        if (j == 0) {
                            g0.add(i);
                        } else if (j == 1) {
                            g1.add(i);
                        }
                    }
                }
            }
            
            for (int i = 0; i < g0.size(); i++) {
                System.out.println("g0: "+g0.get(i));
            }
            for (int i = 0; i < g1.size(); i++) {
                System.out.println("g1: "+g1.get(i));
            }
            
            String[][] matrix = new String[mTest.length][2];
            for (int i = 0; i < mTest.length; i++) {
                if (g0.contains(map.defineWinner(mTest[i]).getName())) {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "TIPO 1";
                } else if (g1.contains(map.defineWinner(mTest[i]).getName())) {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "TIPO 2";
                } else if (g2.contains(map.defineWinner(mTest[i]).getName())) {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "TIPO 3";
                } else {
                    matrix[i][0] = "" + i;
                    matrix[i][1] = "ERRO";
                }
            }
            setTable(matrix, new String[]{"AMOSTRA", "TIPO"});
        } else {
            JOptionPane.showMessageDialog(null, "Dados insuficientes para aplicar K-Means!", "Atenção", 2);
        }
    }//GEN-LAST:event_jButtonKMeansActionPerformed

    private void jButtonTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTrainActionPerformed
        if (map == null) {
            JOptionPane.showMessageDialog(null, "Nenhum mapa criado!", "Atenção", 2);
            return;
        }
        String path;
        if (jTextFieldTrain.getText() != null) {
            path = jTextFieldTrain.getText();
            try {
                winner = map.train(path, ",");
                
                weightWinner = new double[winner.length][winner[0].getWeight().length];
                int count = 0;
                int numNeurons = map.getSize() * map.getSize();
                int[] aux1 = new int[numNeurons];
                int[] aux2 = new int[numNeurons];
                for (int i = 0; i < numNeurons; i++) {
                    aux1[i] = 0;
                    aux2[i] = 0;
                }
                for (int i = 0; i < winner.length; i++) {
                    weightWinner[i] = winner[i].getWeight();
                    //System.out.println("WINNER: " + winner[i].getName());
                    if (count < 167) {
                        aux1[winner[i].getName()]++;
                    } else {
                        aux2[winner[i].getName()]++;
                    }
                    count++;
                }
                for (int i = 0; i < numNeurons; i++) {
                    if (aux1[i] > aux2[i]) {
                        malignant.add(i);
                    } else {
                        benign.add(i);
                    }
                }
                JOptionPane.showMessageDialog(null, "Treinamento finalizado!", "", 1);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Erro na leitura do arquivo de treino!", "", 0);
            } catch (NullPointerException e) {
                JOptionPane.showMessageDialog(null, "Nenhum mapa encontrado!", "", 2);
            } catch (ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(null, "Número de amostras/atributos diferente do especificado!", "", 0);
            }
        }
    }//GEN-LAST:event_jButtonTrainActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        AdvancedTest at = new AdvancedTest();
        at.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void setTable(String[][] body, String[] title) {
        jTableResult.setModel(new javax.swing.table.DefaultTableModel(body, title));
    }
    
    public void setNameMap(String name) {
        jLabelNameMap.setText(name);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBrowseTest;
    private javax.swing.JButton jButtonBrowseTrain;
    private javax.swing.JButton jButtonKMeans;
    private javax.swing.JButton jButtonTest;
    private javax.swing.JButton jButtonTrain;
    private javax.swing.JLabel jLabelMap;
    private javax.swing.JLabel jLabelNameMap;
    private javax.swing.JLabel jLabelNumberOfGroups;
    private javax.swing.JLabel jLabelSize;
    private javax.swing.JLabel jLabelSize2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemNewMap;
    private javax.swing.JMenuItem jMenuItemOpenMap;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenu jMenuNewMap;
    private javax.swing.JMenu jMenuTools;
    private javax.swing.JMenu jMenuView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableResult;
    private javax.swing.JTextField jTextFieldNumberOfGroups;
    private javax.swing.JTextField jTextFieldTest;
    private javax.swing.JTextField jTextFieldTrain;
    // End of variables declaration//GEN-END:variables

    /**
     * @see model.MapListener#train(model.MapEvent)
     * @param event
     */
    @Override
    public void train(MapEvent event) {
        System.out.println("Listener funcionou");
    }
    
    /**
     * 
     * @param map 
     */
    public void setMap(Map map) {
        this.map = map;
        String size = Integer.toString(map.getSize());
        jLabelSize2.setText(size + " x " + size);
        int sizeVet = map.getSize()*map.getSize();
        count1 = new int[sizeVet];
        count2 = new int[sizeVet];
        count3 = new int[sizeVet];
        
        for (int i = 0; i < sizeVet; i++) {
            count1[i] = 0;
            count2[i] = 0;
            count3[i] = 0;
        }
        malignant = new LinkedList<Integer>();
        benign = new LinkedList<Integer>();
    }
}
